@using diplom.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<Project>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Ваши проекты";
    ViewData["Username"] = Context.Session.GetString("UserName");
}

<div class="filter-and-add-container">
    <div class="filter-buttons">
        <a href="/Projects/AllProjects" class="filter-button all @(ViewBag.StatusFilter == null ? "active" : "")">
            Все (@(ViewBag.StatusCounts[ProjectStatus.InProcess] + ViewBag.StatusCounts[ProjectStatus.Completed] + ViewBag.StatusCounts[ProjectStatus.Frozen]))
        </a>
        <a href="/Projects/AllProjects?statusFilter=InProcess" class="filter-button inprocess @(ViewBag.StatusFilter == "InProcess" ? "active" : "")">
            В процессе <i class="las la-cogs"></i> (@ViewBag.StatusCounts[ProjectStatus.InProcess])
        </a>
        <a href="/Projects/AllProjects?statusFilter=Frozen" class="filter-button frozen @(ViewBag.StatusFilter == "Frozen" ? "active" : "")">
            Отложенные <i class="las la-clock"></i> (@ViewBag.StatusCounts[ProjectStatus.Frozen])
        </a>
        <a href="/Projects/AllProjects?statusFilter=Completed" class="filter-button completed @(ViewBag.StatusFilter == "Completed" ? "active" : "")">
            Завершенные <i class="las la-chevron-down"></i> (@ViewBag.StatusCounts[ProjectStatus.Completed])
        </a>
    </div>

    <div class="button-a">
        <a href="#add-project" rel="modal:open" class="input__submit">
            Новый проект
            <i class="las la-briefcase"></i>
        </a>
    </div>
</div>

@if (Model.Count == 0)
{
    <div class="centered-container project-massage">
        <div class="message-container ">
            <h2>Здесь пока нет проектов.</h2>
            <p>Создайте новый, чтобы начать работу!</p>
        </div>
    </div>
}
else
{
    <div class="projects">
        @foreach (Project project in Model)
        {
            <div class="project-card @(GetStatusClass(project.Status))">
                <a href="/Projects/Project/@project.ID">
                    <h2 class="project-title">@project.Name</h2>
                    <p class="project-description">@project.Description</p>
                    <p class="project-status">Статус: @project.ConvertStatus(project.Status)</p>
                    <p class="project-deadline">Завершить до @(project.DeadlineDate?.ToString("dd.MM.yyyy") ?? "не указано")</p>

                    <p class="project-created">Создан @project.CreateDate.ToString("dd.MM.yyyy")</p>
                    @if (project.EndDate != null)
                    {
                        <p class="project-created">Завершен @project.EndDate.Value.ToString("dd.MM.yyyy")</p>
                    }

                    @if (project.UserProjects.FirstOrDefault(x => x.UserRole == UserRoles.Admin).UserID == ViewBag.UserID)
                    {
                        <a href="#edit-project" rel="modal:open" class="edit-project-button" data-project-id="@project.ID">
                            <i class="las la-pen"></i>
                        </a>
                    }
                    else
                    {
                        <a href="#edit-project" rel="modal:open" class="edit-project-button" data-project-id="@project.ID">
                            <i class="las la-info-circle"></i>
                        </a>
                    }
                    
                </a>
            </div>
        }
    </div>
}


@functions {
    private string GetStatusClass(ProjectStatus status)
    {
        switch (status)
        {
            case ProjectStatus.InProcess:
                return "status-inprocess";
            case ProjectStatus.Completed:
                return "status-completed";
            case ProjectStatus.Frozen:
                return "status-frozen";
            default:
                return "";
        }
    }
}

<!--------------------------------------------------------------->
<form asp-action="CreateProject" asp-controller="Projects" id="add-project" class="modal">
    <div class="modal-container">
        <h1 class="modal-title">Новый проект</h1>
        <label class="input-form__label add-project">
            <span class="input-placeholder">название</span>
            <input class="form__input input-name" name="Name" autocomplete="off" required>
        </label>
        <label class="input-form__label add-project">
            <span class="input-placeholder">описание</span>
            <textarea class="form__input form__textarea" name="Description" autocomplete="off"></textarea>
        </label>

        <label class="input-form__label add-project">
            <span class="input-placeholder select-date">срок</span>
            <input class="form__input input-date" type="date" name="DeadlineDate" required value="@DateTime.Now.ToString("yyyy-MM-dd")">
        </label>

        <button class="input__submit confirm">Добавить <i class="las la-clipboard-check"></i></button>
    </div>
    <a href="#" rel="modal:close"></a>
</form>

<script>
            document.addEventListener('DOMContentLoaded', function () {
        const buttons = document.querySelectorAll('.edit-project-button');

        buttons.forEach(button => {
            button.addEventListener('click', async function () {
                const projectID = this.getAttribute('data-project-id');
                const modalTitle = document.getElementById('edit-project-title');
                const form = document.getElementById('edit-project-form');
                resetForm();

                openModal();
                try {
                    const response = await fetch(`/Projects/GetProjectInfo/${projectID}`);
                    const data = await response.json();

                    if (!data) {
                        modalTitle.textContent = 'Ошибка загрузки';
                        return;
                    }

                    const project = data.project;
                    const isAdmin = data.isAdmin;

                    document.getElementById('edit-project-id').value = project.ID;
                    document.getElementById('edit-project-name').value = project.Name;
                    document.getElementById('edit-project-description').value = project.Description || '';

                    const statusSelect = document.getElementById('edit-project-status');
                    statusSelect.innerHTML = '';

                    const statusMap = {
                        "@ProjectStatus.InProcess": "В процессе",
                        "@ProjectStatus.Frozen": "Отложен",
                        "@ProjectStatus.Completed": "Завершен"
                    };

                    Object.entries(statusMap).forEach(([value, label]) => {
                        const option = document.createElement('option');
                        option.value = value;
                        option.text = label;
                        if (value === project.Status.toString()) {
                            option.selected = true;
                        }
                        statusSelect.appendChild(option);
                    });

                    if (project.DeadlineDate) {
                        const date = new Date(project.DeadlineDate);
                        const formattedDate = date.toISOString().split('T')[0];
                        document.getElementById('edit-project-deadline').value = formattedDate;
                    }
                    modalTitle.textContent = isAdmin ? "Редактирование проекта" : "Просмотр проекта";
                    const inputs = form.querySelectorAll('input, textarea, select');
                    inputs.forEach(input => {
                        input.disabled = !isAdmin;
                    });

                    const saveBtn = document.getElementById('edit-project-save-btn');
                    saveBtn.classList.toggle('hidden', !isAdmin);

                } catch (error) {
                    console.error('Ошибка при загрузке данных проекта:', error);
                    modalTitle.textContent = 'Ошибка загрузки данных';
                }
            });
        });

        function resetForm() {
            const form = document.getElementById('edit-project-form');
            form.reset();
            form.querySelector('#edit-project-id').value = '';
            form.querySelector('#edit-project-status').innerHTML = '';
            form.querySelector('#edit-project-save-btn').classList.add('hidden');
        }

        function openModal() {
            const modal = document.getElementById('edit-project');
            modal.style.display = 'block';
        }
    });
</script>

<div id="edit-project" class="modal">
    <form id="edit-project-form" asp-action="EditProject" asp-controller="Projects">
        <input type="hidden" name="projectID" id="edit-project-id" />
        <input type="hidden" name="returnUrl" value="/Projects/AllProjects" />

        <div class="modal-container">
            <h1 class="modal-title" id="edit-project-title">Загрузка...</h1>

            <label class="input-form__label add-project">
                <span class="input-placeholder">название</span>
                <input class="form__input input-name" id="edit-project-name" name="Name" autocomplete="off" disabled />
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder">описание</span>
                <textarea class="form__input form__textarea" id="edit-project-description" name="Description" autocomplete="off" disabled></textarea>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">статус</span>
                <select class="form__input input-select" id="edit-project-status" name="Status" disabled>

                </select>
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder select-date">срок</span>
                <input class="form__input input-date" type="date" id="edit-project-deadline" name="DeadlineDate" disabled />
            </label>

            <button type="submit" id="edit-project-save-btn" class="input__submit confirm hidden">Сохранить <i class="las la-save"></i></button>
        </div>
    </form>
    <a href="#" rel="modal:close"></a>
</div>