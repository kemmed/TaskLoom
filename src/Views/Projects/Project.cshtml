@using diplom.Models
@using diplom.Controllers
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<StatusType>

@{
    Layout = "_Layout";
    ViewData["Username"] = Context.Session.GetString("UserName");
}

<div class="project-page-container">
    <div class="project-header">
        <a class="info-container-link" href="/Projects/ProjectSettings/@ViewBag.ProjectID">
            <div class="info-container">
                <span class="project-name">@ViewBag.ProjectName</span>
                <div class="icon">
                    <i class="las la-cog"></i>
                </div>
            </div>
        </a>

        <div class="button-a">
            <a href="#add-task" rel="modal:open" class="input__submit">Добавить задачу <i class="las la-thumbtack"></i></a>
        </div>
    </div>

    <div class="task-filter-tabs">
        @* <a href="/Projects/ProjectDetails?filter=all" class="filter-button all @(ViewBag.TaskFilter == "all" ? "active" : "")">Все</a>
        <a href="/Projects/ProjectDetails?filter=myTasks" class="filter-button my-task @(ViewBag.TaskFilter == "myTasks" ? "active" : "")">Мои <i class="las la-user-alt"></i></a>
        <a href="/Projects/ProjectDetails?filter=myCategory" class="filter-button my-category @(ViewBag.TaskFilter == "myTasks" ? "active" : "")">Моей категории <i class="las la-stream"></i></a> *@
    </div>

    <div class="task-columns-container">
        <div class="task-columns">
            @foreach (StatusType statusType in Model)
            {
                <div class="task-column" data-status="@statusType.Name" data-status-id="@statusType.ID">
                    <h2>@statusType.Name</h2>
                    <ul class="task-list">
                        @foreach (Issue task in statusType.Issues.Where(t => t.StatusType.Name == statusType.Name))
                        {
                            <li class="task-card draggable @GetPriorityClass(task.PriorityType)" data-task-id="@task.ID">
                                <a href="#edit-task" rel="modal:open" class="edit-task-link" data-issue-id="@task.ID">
                                    <h3>@task.Name</h3>
                                    <p>Приоритет: <span class="priority-text">@(task.PriorityType.Name)</span></p>
                                    <p>Завершить до: @(task.DeadlineDate?.ToString("dd.MM.yyyy") ?? "не указано")</p>
                                </a>

                                
                                @if (task.CreatorID == ViewBag.UserID)
                                {
                                    <a href="#delete-task" rel="modal:open" class="delete-task-button" data-task-id="@task.ID">
                                        <i class="las la-trash-alt"></i>
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetPriorityClass(PriorityType priority)
    {
        switch (priority.Name)
        {
            case "Высокий": return "priority-high";
            case "Средний": return "priority-medium";
            case "Низкий": return "priority-low";
            default: return "";
        }
    }
}


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const taskColumns = document.querySelectorAll('.task-list');

        taskColumns.forEach(column => {
            Sortable.create(column, {
                group: 'tasks',
                animation: 150,
                ghostClass: 'sortable-ghost',
                emptyInsertThreshold: 250,

                onEnd: function (evt) {
                    const draggedTask = evt.item;
                    const issueID = draggedTask.dataset.taskId;
                    const targetColumn = evt.to;
                    const statusID = targetColumn.closest('.task-column').dataset.statusId;

                    fetch(`/Projects/UpdateIssueStatus?currIssueID=${encodeURIComponent(issueID)}&currStatusID=${encodeURIComponent(statusID)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('Status updated:', data);
                        })
                        .catch(error => {
                            console.error('Error updating status:', error);
                        });
                }
            });
        });
    });
</script>



<div id="add-task" class="modal">
    <form asp-action="CreateIssue" asp-controller="Projects" method="post">
        <input type="hidden" name="projectID" value="@ViewBag.ProjectID" />

        <div class="modal-container">
            <h1 class="modal-title">Новая задача</h1>

            <label class="input-form__label add-project">
                <span class="input-placeholder">название</span>
                <input class="form__input input-name" name="Name" autocomplete="off" required>
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder">описание</span>
                <textarea class="form__input form__textarea" name="Description" autocomplete="off"></textarea>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">приоритет</span>
                <select class="form__input input-select" name="PriorityTypeID" required>
                    @foreach (SelectListItem option in ViewBag.Priorities)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">категория</span>
                <select class="form__input input-select" name="CategoryTypeID">
                    <option value="">---без категории---</option>
                    @foreach (SelectListItem option in ViewBag.Categories)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">ответственный</span>
                <select class="form__input input-select" name="PerformerID" required>
                    @foreach (SelectListItem option in ViewBag.Responsibilities)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder select-date">срок</span>
                <input class="form__input input-date" type="date" name="DeadlineDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" required>
            </label>

            <button class="input__submit confirm">Добавить <i class="las la-clipboard-check"></i></button>
        </div>
    </form>

    <a href="#" rel="modal:close"></a>
</div>

<script>
       document.addEventListener('DOMContentLoaded', function () {
        const editButtons = document.querySelectorAll('.edit-task-link');
        editButtons.forEach(button => {
            button.addEventListener('click', function () {
                const issueID = this.getAttribute('data-issue-id');
                document.querySelectorAll('.issueform').forEach(element => {
                    element.classList.add('hidden');
                });
                const selectedEditForm = document.getElementById('EDIT_ISSUE' + issueID);
                if (selectedEditForm) {
                    selectedEditForm.classList.remove('hidden');
                }
            });
        });

        const deleteButtons = document.querySelectorAll('.delet-task-button');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const issueID = this.getAttribute('data-task-id');
                document.querySelectorAll('.issueform').forEach(element => {
                    element.classList.add('hidden');
                });
                const selectedDeleteForm = document.getElementById('DELETE_ISSUE' + issueID);
                if (selectedDeleteForm) {
                    selectedDeleteForm.classList.remove('hidden');
                }
            });
        });
    });
</script>


<div id="delete-task" class="modal">
    @foreach (var status in Model)
    {
        @foreach (var issue in status.Issues)
        {
            <div id="DELETE_ISSUE@(issue.ID)" class="hidden issueform">
                <form asp-action="DeleteIssue" asp-controller="Projects">
                    <input type="hidden" value="@issue.ID" name="issueID" id="issueID" />
                    <div class="modal-container">
                        <h1 class="modal-title">Подтвердите удаление задачи</h1>
                        <p class="delete-text">После удаления задача будет перемещена в архив.</p>
                        <button class="input__submit cancel">Удалить <i class="las la-trash-alt"></i></button>
                    </div>
                </form>
            </div>
        }
    }
    <a href="#" rel="modal:close"></a>
</div>


<div id="edit-task" class="modal">
    @foreach (var status in Model)
    {
        @foreach (var issue in status.Issues)
        {
            <div id="EDIT_ISSUE@(issue.ID)" class="hidden issueform">
                <form asp-action="UpdateIssue" asp-controller="Projects">
                    <input type="hidden" value="@issue.ID" name="issueID" id="issueID" />
                    <div class="modal-container">
                        <h1 class="modal-title">
                            @(issue.CreatorID == ViewBag.UserID ? "Редактирование задачи" : "Просмотр задачи")
                        </h1>
                        <label class="input-form__label add-project">
                            <span class="input-placeholder">название</span>
                            <input class="form__input input-name" name="Name" autocomplete="off" value="@issue.Name"
                                   required @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        </label>

                        <label class="input-form__label add-project">
                            <span class="input-placeholder">описание</span>
                            <textarea class="form__input form__textarea" name="Description" autocomplete="off"
                                      @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>@issue.Description</textarea>
                        </label>

                        <label class="input-form__label">
                            <span class="input-placeholder select-date">приоритет</span>
                            <select class="form__input input-select" name="PriorityTypeID" required
                                    @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                                @foreach (var option in ViewBag.Priorities)
                                {
                                    <!option value="@option.Value" @((issue.PriorityTypeID.ToString() == option.Value) ? "selected" : "")>@option.Text</!option>
                                }
                            </select>
                        </label>

                        <label class="input-form__label">
                            <span class="input-placeholder select-date">статус</span>
                            <select class="form__input input-select" name="StatusTypeID"
                                    @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                                @foreach (var option in ViewBag.Statuses)
                                {
                                    <!option value="@option.Value" @((issue.StatusTypeID.ToString() == option.Value) ? "selected" : "")>@option.Text</!option>
                                }
                            </select>
                        </label>

                        <label class="input-form__label">
                            <span class="input-placeholder select-date">категория</span>
                            <select class="form__input input-select" name="CategoryTypeID"
                                    @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                                <option value="">---без категории---</option>
                                @foreach (var option in ViewBag.Categories)
                                {
                                    <!option value="@option.Value" @((issue.CategoryTypeID?.ToString() == option.Value) ? "selected" : "")>@option.Text</!option>
                                }
                            </select>
                        </label>

                        <label class="input-form__label">
                            <span class="input-placeholder select-date">ответственный</span>
                            <select class="form__input input-select" name="PerformerID"
                                    @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                                @foreach (var option in ViewBag.Responsibilities)
                                {
                                    <!option value="@option.Value" @((issue.Performer.ID.ToString() == option.Value) ? "selected" : "")>@option.Text</!option>
                                }
                            </select>
                        </label>

                        <label class="input-form__label add-project">
                            <span class="input-placeholder select-date">срок</span>
                            <input class="form__input input-date" type="date" name="DeadlineDate"
                                   value="@(issue.DeadlineDate?.ToString("yyyy-MM-dd") ?? DateTime.Now.ToString("yyyy-MM-dd"))"
                                   required @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        </label>

                        <!-- Кнопка сохранения -->
                        @if (issue.CreatorID == ViewBag.UserID)
                        {
                            <button class="input__submit confirm">Сохранить <i class="las la-clipboard-check"></i></button>
                        }
                    </div>
                </form>
            </div>
        }
    }
    <a href="#" rel="modal:close"></a>
</div>


