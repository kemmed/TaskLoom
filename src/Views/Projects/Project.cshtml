@using diplom.Models
@using diplom.Controllers
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<Issue>

@{
    Layout = "_Layout";
    ViewData["Username"] = Context.Session.GetString("UserName");
}

<div class="project-page-container">
    <div class="project-header">
        <a class="info-container-link" href="/Projects/ProjectSettings/@ViewBag.ProjectID">
            <div class="info-container">
                <span class="project-name">@ViewBag.ProjectName</span>
                <div class="icon">
                    <i class="las la-cog"></i>
                </div>
            </div>
        </a>

        <div class="button-a">
            <a href="#add-task" rel="modal:open" class="input__submit">Добавить задачу <i class="las la-thumbtack"></i></a>
        </div>
    </div>

    <div class="task-filter-tabs">
        <a href="/Projects/Project/@ViewBag.ProjectID?filter=all" class="filter-button all @(ViewBag.TaskFilter == "all" ? "active" : "")">Все</a>
        <a href="/Projects/Project/@ViewBag.ProjectID?filter=myTasks" class="filter-button my-task @(ViewBag.TaskFilter == "myTasks" ? "active" : "")">Мои задачи <i class="las la-user-alt"></i></a>
        <a href="/Projects/Project/@ViewBag.ProjectID?filter=myCategory" class="filter-button my-category @(ViewBag.TaskFilter == "myCategory" ? "active" : "")">Мои категории <i class="las la-stream"></i></a>
    </div>

    <div class="task-columns-container">
        <div class="task-columns">
            @foreach (string statusType in ViewBag.StatusTypes)
            {
                <div class="task-column" data-status="@statusType">
                    <h2>@statusType</h2>
                    <ul class="task-list">
                        @foreach (Issue task in Model.Where(t => t.Status == statusType))
                        {
                            <li class="task-card draggable @GetPriorityClass(task.Priority)" data-task-id="@task.ID">
                                <a href="#edit-task" rel="modal:open" class="edit-task-link" data-issue-id="@task.ID">
                                    <h3>@task.Name</h3>
                                    <h4>@(task.Category ?? "нет категории")</h4>
                                    <p>Приоритет: <span class="priority-text">@(task.Priority)</span></p>
                                    <p>Ответственный: @($"{task.Performer.LName} {task.Performer.FName}")</p>
                                    <p>Завершить до: @(task.DeadlineDate?.ToString("dd.MM.yyyy") ?? "нет срока")</p>
                                </a>

                                @if (task.CreatorID == ViewBag.UserID)
                                {
                                    <a href="#delete-task" rel="modal:open" class="delete-task-button" data-task-id="@task.ID">
                                        <i class="las la-trash-alt"></i>
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetPriorityClass(string priority)
    {
        return priority switch
        {
            "Высокий" => "priority-high",
            "Средний" => "priority-medium",
            "Низкий" => "priority-low",
            _ => ""
        };
    }
}


<script>
        document.addEventListener('DOMContentLoaded', function () {
        const taskColumns = document.querySelectorAll('.task-list');

        taskColumns.forEach(column => {
            Sortable.create(column, {
                group: 'tasks',
                animation: 150,
                ghostClass: 'sortable-ghost',
                emptyInsertThreshold: 250,

                onEnd: function (evt) {
                    const draggedTask = evt.item;
                    const issueID = draggedTask.dataset.taskId;
                    const targetColumn = evt.to.closest('.task-column');
                    const statusName = targetColumn.dataset.status;

                    fetch(`/Projects/UpdateIssueStatus?currIssueID=${encodeURIComponent(issueID)}&newStatus=${encodeURIComponent(statusName)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.text();
                        })
                        .then(() => {
                            console.log('Status updated successfully');
                        })
                        .catch(error => {
                            console.error('Error updating status:', error);
                        });
                }
            });
        });
    });
</script>


<div id="add-task" class="modal">
    <form asp-action="CreateIssue" asp-controller="Projects" method="post">
        <input type="hidden" name="projectID" value="@ViewBag.ProjectID" />

        <div class="modal-container">
            <h1 class="modal-title">Новая задача</h1>

            <label class="input-form__label add-project">
                <span class="input-placeholder">название</span>
                <input class="form__input input-name" name="Name" autocomplete="off" required />
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder">описание</span>
                <textarea class="form__input form__textarea" name="Description" autocomplete="off"></textarea>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">приоритет</span>
                <select class="form__input input-select" name="Priority" required>
                    @foreach (SelectListItem option in ViewBag.Priorities)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">категория</span>
                <select class="form__input input-select" name="Category">
                    <option value="">---без категории---</option>
                    @foreach (SelectListItem option in ViewBag.Categories)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label">
                <span class="input-placeholder select-date">ответственный</span>
                <select class="form__input input-select" name="PerformerID" required>
                    @foreach (SelectListItem option in ViewBag.Responsibilities)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </label>

            <label class="input-form__label add-project">
                <span class="input-placeholder select-date">срок</span>
                <input class="form__input input-date" type="date" name="DeadlineDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
            </label>

            <button class="input__submit confirm">Добавить <i class="las la-clipboard-check"></i></button>
        </div>
    </form>

    <a href="#" rel="modal:close"></a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const editButtons = document.querySelectorAll('.edit-task-link');
        editButtons.forEach(button => {
            button.addEventListener('click', function () {
                const issueID = this.getAttribute('data-issue-id');
                resetAndPopulateForm(issueID, 'EDIT_ISSUE');
            });
        });

        const deleteButtons = document.querySelectorAll('.delete-task-button');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const issueID = this.getAttribute('data-task-id');
                resetAndPopulateForm(issueID, 'DELETE_ISSUE');
            });
        });
        function resetAndPopulateForm(issueID, formPrefix) {
            document.querySelectorAll('.issueform').forEach(element => {
                element.classList.add('hidden');
            });
            const selectedForm = document.getElementById(formPrefix + issueID);
            if (selectedForm) {
                const form = selectedForm.querySelector('form');
                form.reset();
                populateFormWithData(form, issueID);
                selectedForm.classList.remove('hidden');
            }
        }
            function populateFormWithData(form, issueID) {
        fetch(`/api/issues/${issueID}`)
            .then(response => response.json())
            .then(data => {
                form.querySelector('[name="Name"]').value = data.Name;
                form.querySelector('[name="Description"]').value = data.Description;
                form.querySelector('[name="PriorityTypeID"]').value = data.PriorityTypeID;
                form.querySelector('[name="StatusTypeID"]').value = data.StatusTypeID;
                form.querySelector('[name="CategoryTypeID"]').value = data.CategoryTypeID || '';
                form.querySelector('[name="PerformerID"]').value = data.PerformerID;
                form.querySelector('[name="DeadlineDate"]').value = data.DeadlineDate.split('T')[0];
            })
            .catch(error => console.error('Ошибка при получении данных:', error));
    }
    });
</script>


<div id="delete-task" class="modal">
    @foreach (var issue in Model)
    {
            <div id="DELETE_ISSUE@(issue.ID)" class="hidden issueform">
                <form asp-action="DeleteIssue" asp-controller="Projects">
                    <input type="hidden" value="@issue.ID" name="issueID" id="issueID" />
                    <div class="modal-container">
                        <h1 class="modal-title">Подтвердите удаление задачи</h1>
                        <p class="delete-text">После удаления задача будет перемещена в архив.</p>
                        <button class="input__submit cancel">Удалить <i class="las la-trash-alt"></i></button>
                    </div>
                </form>
            </div>
    }
    <a href="#" rel="modal:close"></a>
</div>


@* <div id="edit-task" class="modal">
        <form asp-action="UpdateIssue" asp-controller="Projects">
            <input type="hidden" name="issueID" id="issueID" />
            <div class="modal-container">
                <h1 class="modal-title">
                     @(issue.CreatorID == ViewBag.UserID ? "Редактирование задачи" : "Просмотр задачи") 
                </h1>
                <label class="input-form__label add-project">
                    <span class="input-placeholder">название</span>
                    <input class="form__input input-name" name="Name" autocomplete="off"
                            required @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                </label>

                <label class="input-form__label add-project">
                    <span class="input-placeholder">описание</span>
                    <textarea class="form__input form__textarea" name="Description" autocomplete="off"
                                @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")> </textarea>
                </label>

                <label class="input-form__label">
                    <span class="input-placeholder select-date">приоритет</span>
                    <select class="form__input input-select" name="PriorityTypeID" required
                            @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        @foreach (var option in ViewBag.Priorities)
                        {
                        }
                    </select>
                </label>

                <label class="input-form__label">
                    <span class="input-placeholder select-date">статус</span>
                    <select class="form__input input-select" name="StatusTypeID"
                            @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        @foreach (var option in ViewBag.Statuses)
                        {
                        }
                    </select>
                </label>

                <label class="input-form__label">
                    <span class="input-placeholder select-date">категория</span>
                    <select class="form__input input-select" name="CategoryTypeID"
                            @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        <option value="">---без категории---</option>
                        @foreach (var option in ViewBag.Categories)
                        {
                        }
                    </select>
                </label>

                <label class="input-form__label">
                    <span class="input-placeholder select-date">ответственный</span>
                    <select class="form__input input-select" name="PerformerID"
                            @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                        @foreach (var option in ViewBag.Responsibilities)
                        {
                        }
                    </select>
                </label>

                <label class="input-form__label add-project">
                    <span class="input-placeholder select-date">срок</span>
                    <input class="form__input input-date" type="date" name="DeadlineDate"
                            value="@(issue.DeadlineDate?.ToString("yyyy-MM-dd") ?? DateTime.Now.ToString("yyyy-MM-dd"))"
                            required @(issue.CreatorID != ViewBag.UserID ? "disabled" : "")>
                </label>
                @if (issue.CreatorID == ViewBag.UserID)
                {
                    <button class="input__submit confirm">Сохранить <i class="las la-clipboard-check"></i></button>
                }
            </div>
        </form>
    <a href="#" rel="modal:close"></a>
</div> *@


