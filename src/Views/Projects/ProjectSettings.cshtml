@using diplom.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Project
@{
    Layout = "_Layout";
    ViewData["Username"] = Context.Session.GetString("UserName");
}

<div class="settings-container">

    <div class="settings-header">
        <div class="button-a">
            <a href="/Projects/Archive/@ViewBag.ProjectID" class="input__submit">Архив задач <i class="las la-archive"></i></i></a>
            <a href="/Projects/History/@ViewBag.ProjectID" class="input__submit">История действий <i class="las la-history"></i></a>
            <a href="/Projects/Statistics/@ViewBag.ProjectID" class="input__submit">Статистика проекта <i class="las la-chart-bar"></i></a>
            <a href="/Projects/LeaveProject/@ViewBag.ProjectID" class="input__submit cancel">Покинуть проект <i class="las la-sign-out-alt"></i></a>
        </div>
    </div>

    <div class="project-details">
        <h2 class="modal-title">Основная информация</h2>
        <form asp-action="EditProject" asp-controller="Projects" method="post" class="update-project-container">
            <input type="hidden" name="projectID" value="@ViewBag.ProjectID" />
            <input type="hidden" name="returnUrl" value="/Projects/ProjectSettings/@Model.ID" />
            <label class="input-form__label add-project">
                <span class="input-placeholder">название</span>
                <input class="form__input input-name" name="Name" autocomplete="off" required value="@Model.Name">
            </label>
            <label class="input-form__label add-project">
                <span class="input-placeholder">описание</span>
                <textarea class="form__input form__textarea" name="Description" autocomplete="off">@Model.Description</textarea>
            </label>
            <label class="input-form__label">
                <span class="input-placeholder select-date">статус</span>
                <select class="form__input input-select" name="Status" required>
                    <!option value="@ProjectStatus.InProcess" @((Model.Status == ProjectStatus.InProcess) ? "selected" : "")>@Model.ConvertStatus(ProjectStatus.InProcess)</!option>
                    <!option value="@ProjectStatus.Frozen" @((Model.Status == ProjectStatus.Frozen) ? "selected" : "")>@Model.ConvertStatus(ProjectStatus.Frozen)</!option>
                    <!option value="@ProjectStatus.Completed" @((Model.Status == ProjectStatus.Completed) ? "selected" : "")>@Model.ConvertStatus(ProjectStatus.Completed)</!option>
                </select>
            </label>
            <label class="input-form__label add-project">
                <span class="input-placeholder select-date">срок</span>
                <input class="form__input input-date" type="date" name="DeadlineDate" required value="@Model.DeadlineDate.Value.ToString("yyyy-MM-dd")">
            </label>
            <button class="input__submit confirm no-margin">Сохранить <i class="las la-save"></i></button>
        </form>
    </div>

    <div class="users-section">
        <div class="config-title-container">
            <h2 class="config-title">Сотрудники</h2>
            <div class="button-a">
                <a href="#add-user" rel="modal:open" class="input__submit mini">
                    <i class="las la-user-plus"></i>
                </a>
            </div>
        </div>
        <table class="users-table">
            <thead>
                <tr>
                    <th>Имя</th>
                    <th>Категории</th>
                    <th>Почта</th>
                    <th>Роль</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (UserProject userProject in Model.UserProjects)
                {
                    <tr>
                        <td>@userProject.User.LName @userProject.User.FName</td>
                        <td>
                            @if (userProject.CategoryTypes != null && userProject.CategoryTypes.Any())
                            {
                                <ul class="category-list">
                                    @foreach (var category in userProject.CategoryTypes)
                                    {
                                        <li>@category.Name </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span>Нет категорий</span>
                            }
                        </td>
                        <td>@userProject.User.Email</td>
                        <td class="user-role">
                            <a class="user-role-edit">
                                @userProject.UserRole <i class="las la-pen"></i>
                            </a>
                        </td>
                        <td class="exclude-user">
                            @if (userProject.UserRole != UserRoles.Admin)
                            {
                                <div class="button-a">
                                    <a href="/Projects/ExcludeUser?userId=@userProject.User.ID&projectId=@Model.ID" class="input__submit cancel mini">
                                        <i class="las la-user-times"></i>
                                    </a>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="categories-section">
        <div class="config-title-container">
            <h2 class="config-title">Категории задач</h2>
            <div class="button-a">
                <a href="#add-category" rel="modal:open" class="input__submit mini">
                    <i class="las la-plus-circle"></i>
                </a>
            </div>
        </div>
        <div class="categories-list">
            @if (Model.CategoryTypes == null || !Model.CategoryTypes.Any())
            {
                <p>Категории задач отсутствуют.</p>
            }
            else
            {
                <ul>
                    @foreach (var category in Model.CategoryTypes)
                    {
                        <li class="category-item-container">
                            <a class="category-name-container edit-category-link" href="#edit-category" rel="modal:open" data-category-id="@category.ID">
                                @category.Name <i class="las la-pen"></i>
                            </a>
                            <div class="button-a">
                                <a href="#delete-category" rel="modal:open" class="input__submit cancel mini delete-category-button" data-category-id="@category.ID">
                                    <i class="las la-trash-alt"></i>
                                </a>
                            </div>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>


    <form asp-action="AddCategory" asp-controller="Projects" id="add-category" class="modal">
        <input type="hidden" name="projectID" value="@ViewBag.ProjectID" />
        <div class="modal-container">
            <h1 class="modal-title">Добавить категорию</h1>
            <label class="input-form__label add-project">
                <span class="input-placeholder">название категории</span>
                <input class="form__input input-name" name="Name" autocomplete="off" required>
            </label>
            <button class="input__submit confirm">Добавить <i class="las la-clipboard-check"></i></button>
        </div>
        <a href="#" rel="modal:close"></a>
    </form>

    <div id="edit-category" class="modal">
        @foreach (var category in Model.CategoryTypes)
        {
            <div id="EDIT_CATEGORY@(category.ID)" class="hidden categoryform">
                <form asp-action="EditCategory" asp-controller="Projects">
                    <input type="hidden" value="@category.ID" name="categoryID" />
                    <div class="modal-container">
                        <h1 class="modal-title">Редактировать категорию</h1>
                        <label class="input-form__label add-project">
                            <span class="input-placeholder">название категории</span>
                            <input class="form__input input-name" name="Name" autocomplete="off" value="@category.Name" required>
                        </label>
                        <button class="input__submit confirm">Сохранить <i class="las la-clipboard-check"></i></button>
                    </div>
                </form>
            </div>
        }
        <a href="#" rel="modal:close"></a>
    </div>
    <div id="delete-category" class="modal">
        @foreach (var category in Model.CategoryTypes)
        {
            <div id="DELETE_CATEGORY@(category.ID)" class="hidden categoryform">
                <form asp-action="DeleteCategory" asp-controller="Projects">
                    <input type="hidden" value="@category.ID" name="categoryID" />
                    <div class="modal-container">
                        <h1 class="modal-title">Подтвердите удаление категории</h1>
                        <p class="delete-text">После удаления категория будет перемещена в архив.</p>
                        <button class="input__submit cancel">Удалить <i class="las la-trash-alt"></i></button>
                    </div>
                </form>
            </div>
        }
        <a href="#" rel="modal:close"></a>
    </div>

    <script>
            document.addEventListener('DOMContentLoaded', function () {
            const editButtons = document.querySelectorAll('.edit-category-link');
            editButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();

                    const categoryID = this.getAttribute('data-category-id');
                    document.querySelectorAll('.categoryform').forEach(element => {
                        element.classList.add('hidden');
                    });
                    const selectedEditForm = document.getElementById('EDIT_CATEGORY' + categoryID);
                    if (selectedEditForm) {
                        selectedEditForm.classList.remove('hidden');
                    }
                });
            });
            const deleteButtons = document.querySelectorAll('.delete-category-button');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();

                    const categoryID = this.getAttribute('data-category-id');

                    document.querySelectorAll('.categoryform').forEach(element => {
                        element.classList.add('hidden');
                    });
                    const selectedDeleteForm = document.getElementById('DELETE_CATEGORY' + categoryID);
                    if (selectedDeleteForm) {
                        selectedDeleteForm.classList.remove('hidden');
                    }
                });
            });
        });
    </script>

